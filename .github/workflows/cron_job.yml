name: Playwright Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    - cron: "0 13 * * *"  # Runs every day at 13:00 UTC (6 PM PST)

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npx playwright test --reporter=json,json-summary 
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      
      - name: Generate Test Summary
        run: |
          # Extracting test results from JSON
          PASSED=$(jq '.summary.passed' playwright-report/json-summary.json)
          FAILED=$(jq '.summary.failed' playwright-report/json-summary.json)
          SKIPPED=$(jq '.summary.skipped' playwright-report/json-summary.json)
          TOTAL=$((PASSED + FAILED + SKIPPED))

          # Calculating pass percentage
          if [ "$TOTAL" -gt 0 ]; then
            PASS_PERCENTAGE=$((PASSED * 100 / TOTAL))
          else
            PASS_PERCENTAGE=0
          fi

          # Generating bar chart
          PASS_BAR=$(printf 'üü©%.0s' $(seq 1 $((PASSED * 10 / TOTAL))))
          FAIL_BAR=$(printf 'üü•%.0s' $(seq 1 $((FAILED * 10 / TOTAL))))
          SKIP_BAR=$(printf 'üü®%.0s' $(seq 1 $((SKIPPED * 10 / TOTAL))))

          # Preparing the Slack message
          echo "SLACK_MESSAGE=üé≠ *Playwright Test Results* üé≠

          ‚úÖ *Passed:* $PASSED
          ‚ùå *Failed:* $FAILED
          ‚ö†Ô∏è *Skipped:* $SKIPPED
          üìä *Pass Rate:* $PASS_PERCENTAGE%

          Progress: $PASS_BAR$FAIL_BAR$SKIP_BAR

          üìú *Report:* <URL_TO_ARTIFACT>" >> $GITHUB_ENV

      - name: Send Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: https://hooks.slack.com/services/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
          SLACK_CHANNEL: "your-channel"
          SLACK_USERNAME: "GitHub Actions"
          SLACK_MESSAGE: ${{ env.SLACK_MESSAGE }}
