name: Playwright Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    - cron: "0 14 * * *"  # Runs every day at 13:00 UTC (6 PM PST)

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          npm ci
          npm install
          npx playwright install

      - name: Install xmlstarlet
        run: |
          sudo apt-get update && sudo apt-get install -y xmlstarlet

      - name: Install Playwright Browsers (Chromium & Firefox)
        run: |
          npx playwright install-deps chromium
          npx playwright install-deps firefox
          npx playwright install chromium
          npx playwright install firefox

      - name: Run Playwright tests with JUnit reporter
        id: PlaywrightPortfolioStatus
        run: |
          npx playwright test --reporter=junit

      - name: Verify Test Report Exists
        run: |
          if [ -f "playwright-report/results.xml" ]; then
            echo "Test report exists."
          else
            echo "Test report missing!"
            exit 1
          fi

      - name: Upload Artifacts
        id: upload_artifact_playwright_portfolio
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 1
          overwrite: true

      - name: Read XML and Send Slack Notification
        if: ${{ always() }}
        env:
          WEBHOOK_URL: https://hooks.slack.com/services/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
        run: |
          RESULTS_XML="playwright-report/results.xml"

          if [ ! -f "$RESULTS_XML" ]; then
            echo "Error: results.xml not found!"
            exit 1
          fi

          total_tests=$(xmlstarlet sel -t -v "/testsuites/@tests" "$RESULTS_XML")
          failed_tests=$(xmlstarlet sel -t -v "/testsuites/@failures" "$RESULTS_XML")
          skipped_tests=$(xmlstarlet sel -t -v "/testsuites/@skipped" "$RESULTS_XML")
          passed_tests=$((total_tests - (failed_tests + skipped_tests)))

          STATUS="failed"
          if [ "$failed_tests" -eq 0 ]; then STATUS="passed"; fi

          ICON="❌"
          COLOR="FF0000"
          if [ "$STATUS" == "passed" ]; then
            ICON="✔️"
            COLOR="00FF00"
          fi

          payload='{
            "@type": "MessageCard",
            "@context": "http://schema.org/extensions",
            "summary": "Daily Run",
            "themeColor": "'"$COLOR"'",
            "sections": [
              {
                "activityTitle": "New Daily Run",
                "facts": [
                  {"name": "Repository", "value": "${{ github.repository }}"},
                  {"name": "Status", "value": "'"$ICON $STATUS"'"},
                  {"name": "Total Tests", "value": "'"$total_tests"'"},
                  {"name": "Passed Tests", "value": "'"$passed_tests"'"},
                  {"name": "Failed Tests", "value": "'"$failed_tests"'"},
                  {"name": "Skipped Tests", "value": "'"$skipped_tests"'"},
                  {"name": "Report Download Url", "value": "[Click to Download Report](${{ steps.upload_artifact_playwright_portfolio.outputs.artifact-url }})"},
                  {"name": "Project Name", "value": "'"Playwright Portfolio by Sabar & Yousaf"'"}
                ],
                "markdown": true
              }
            ]
          }'

          echo "$payload"
          curl -X POST -H 'Content-type: application/json' --data "$payload" "$WEBHOOK_URL"
