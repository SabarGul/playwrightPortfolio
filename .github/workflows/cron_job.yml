name: Playwright Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: '0 7 * * *'  # Runs daily at 7 AM UTC
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright Tests (All Browsers)
        id: playwright_tests
        run: |
          npx playwright test --reporter=json > temp-results.json && jq empty temp-results.json && mv temp-results.json test-results.json || echo '{}' > test-results.json

      - name: Debug Test Results JSON
        run: cat test-results.json | jq '.' || echo "Invalid JSON format"

      - name: Parse Playwright Test Results
        id: parse_results
        run: |
          # Ensure test-results.json exists
          if [ ! -s test-results.json ]; then
            echo "chromium: ‚úÖ 0 | ‚ùå 0 | ‚è≠ 0 | üìà 0%" > summary.txt
            echo "firefox: ‚úÖ 0 | ‚ùå 0 | ‚è≠ 0 | üìà 0%" >> summary.txt
            echo "webkit: ‚úÖ 0 | ‚ùå 0 | ‚è≠ 0 | üìà 0%" >> summary.txt
            exit 0
          fi

          # Function to extract test results
          extract_results() {
            BROWSER=$1
            PASSED=$(jq --arg browser "$BROWSER" '[.suites[].specs[] | select(.projectName == $browser) | .tests[].results[] | select(.status == "passed")] | length' test-results.json || echo 0)
            FAILED=$(jq --arg browser "$BROWSER" '[.suites[].specs[] | select(.projectName == $browser) | .tests[].results[] | select(.status == "failed")] | length' test-results.json || echo 0)
            SKIPPED=$(jq --arg browser "$BROWSER" '[.suites[].specs[] | select(.projectName == $browser) | .tests[].results[] | select(.status == "skipped")] | length' test-results.json || echo 0)
            TOTAL=$((PASSED + FAILED + SKIPPED))

            PASS_PERCENTAGE=0
            if [ "$TOTAL" -gt 0 ]; then
              PASS_PERCENTAGE=$((100 * PASSED / TOTAL))
            fi

            echo "$BROWSER: ‚úÖ $PASSED | ‚ùå $FAILED | ‚è≠ $SKIPPED | üìà $PASS_PERCENTAGE%" >> summary.txt
          }

          # Extract results for each browser
          extract_results "chromium"
          extract_results "firefox"
          extract_results "webkit"

      - name: Send Microsoft Teams Notification
        if: always()
        env:
          TEAMS_WEBHOOK_URL: "https://webhookbot.c-toss.com/api/bot/webhooks/e3577a1c-a3c9-4a52-baa2-6c46e9e4edae"
        run: |
          ARTIFACT_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          
          if [ -f summary.txt ]; then
            MESSAGE="‚úÖ *Playwright Tests Completed!*\n\nüìä *Test Results:*\n\n$(cat summary.txt)\nüìú *[View Report]($ARTIFACT_URL)*"
          else
            MESSAGE="‚ö†Ô∏è Playwright tests ran, but no summary was generated. Check logs for issues.\nüìú *[View Report]($ARTIFACT_URL)*"
          fi

          curl -X POST -H "Content-Type: application/json" --data "$(jq -n --arg text "$MESSAGE" '{text: $text}')" "$TEAMS_WEBHOOK_URL"