name: Playwright Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: '0 7 * * *'  # Runs daily at 7 AM UTC
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Install xmlstarlet
        run: sudo apt-get update && sudo apt-get install -y xmlstarlet

      - name: Run Playwright Tests (All Browsers)
        id: playwright_tests
        continue-on-error: true
        run: |
          mkdir -p playwright-report
          npx playwright test --reporter=html
          mv playwright-report/* ./playwright-report/

      - name: Compress Playwright Report
        run: zip -r playwright-report.zip playwright-report/

      - name: Upload Playwright Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report.zip
          retention-days: 7

      - name: Generate Test Summary
        id: test_summary
        run: |
          total_tests=$(xmlstarlet sel -t -v "/testsuites/@tests" results.xml || echo 0)
          failed_tests=$(xmlstarlet sel -t -v "/testsuites/@failures" results.xml || echo 0)
          skipped_tests=$(xmlstarlet sel -t -v "/testsuites/@skipped" results.xml || echo 0)
          passed_tests=$((total_tests - (failed_tests + skipped_tests)))

          if [ "$failed_tests" -eq 0 ]; then
            STATUS="‚úÖ Passed"
            COLOR="00FF00"
          else
            STATUS="‚ùå Failed"
            COLOR="FF0000"
          fi

          echo "Total Tests: $total_tests" > summary.txt
          echo "‚úÖ Passed: $passed_tests" >> summary.txt
          echo "‚ùå Failed: $failed_tests" >> summary.txt
          echo "‚è≠ Skipped: $skipped_tests" >> summary.txt

      - name: Send Microsoft Teams Notification
        if: always()
        env:
          TEAMS_WEBHOOK_URL: "https://webhookbot.c-toss.com/api/bot/webhooks/e3577a1c-a3c9-4a52-baa2-6c46e9e4edae"
        run: |
          ARTIFACT_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

          if [ -f summary.txt ]; then
            SUMMARY=$(cat summary.txt | jq -Rs .)
            MESSAGE=$(jq -n --arg color "$COLOR" --arg status "$STATUS" --arg summary "$SUMMARY" --arg url "$ARTIFACT_URL" '{
              "@type": "MessageCard",
              "@context": "http://schema.org/extensions",
              "themeColor": $color,
              "summary": "Playwright Test Report",
              "sections": [{
                "activityTitle": "üìå Playwright Test Results",
                "activitySubtitle": $status,
                "text": ("```\n" + $summary + "\n```\nüìú **[View Full Report](" + $url + ")**")
              }]
            }')

            curl -H "Content-Type: application/json" -X POST --data "$MESSAGE" "$TEAMS_WEBHOOK_URL"
          else
            MESSAGE=$(jq -n --arg url "$ARTIFACT_URL" '{
              "@type": "MessageCard",
              "@context": "http://schema.org/extensions",
              "themeColor": "FF9900",
              "summary": "Playwright Test Report",
              "sections": [{
                "activityTitle": "‚ö†Ô∏è Playwright Tests Ran, but No Summary Generated",
                "text": "Check logs for potential issues.\nüìú **[View Full Report](" + $url + ")**"
              }]
            }')

            curl -H "Content-Type: application/json" -X POST --data "$MESSAGE" "$TEAMS_WEBHOOK_URL"
          fi
